It may take several minutes for the LoadBalancer IP or hostname to be provisioned by your cloud provider.

{{- if .Values.ingress.enabled }}
The registry is accessible via the configured Ingress host(s):
{{- range .Values.ingress.hosts }}
  - http{{ if $.Values.ingress.tls }}s{{ end }}://{{ . }}{{ $.Values.ingress.path }}
{{- end }}

{{- else if .Values.loadBalancer.enabled }}
To monitor the LoadBalancer provisioning status, run:
  kubectl get svc -w {{ template "docker-registry.fullname" . }}-{{ .Values.loadBalancer.type | default "internal" }} -n {{ .Release.Namespace }}

Once available, retrieve the external IP/hostname:
  export SERVICE_IP=$(kubectl get svc -n {{ .Release.Namespace }} {{ template "docker-registry.fullname" . }}-{{ .Values.loadBalancer.type | default "internal" }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo "Registry endpoint: https://$SERVICE_IP:{{ .Values.service.port }}"

You can map this endpoint to your registry domain.

{{- else if contains "NodePort" .Values.service.type }}
The registry is exposed using NodePort. Retrieve the node address and port:
  export NODE_PORT=$(kubectl get svc -n {{ .Release.Namespace }} {{ template "docker-registry.fullname" . }} -o jsonpath="{.spec.ports[0].nodePort}")
  export NODE_IP=$(kubectl get nodes -o jsonpath="{.items[0].status.addresses[0].address}")
  echo "Registry endpoint: http://$NODE_IP:$NODE_PORT"

{{- else if contains "ClusterIP" .Values.service.type }}
The registry is running as a ClusterIP service. To access it locally, run:
  export POD_NAME=$(kubectl get pods -n {{ .Release.Namespace }} -l "app={{ template "docker-registry.name" . }},release={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  kubectl -n {{ .Release.Namespace }} port-forward $POD_NAME 8080:5000
  echo "Registry endpoint: http://127.0.0.1:8080"
{{- end }}

---

1. Registry is hosted at:
   - {{ .Values.registryAuth.registryUrl }}

2. Verify the registry is responding:
   - curl -k {{ .Values.registryAuth.registryUrl }}/v2/

3. List available images in the registry:
   - curl -k -u <username>:<password> {{ .Values.registryAuth.registryUrl }}/v2/_catalog